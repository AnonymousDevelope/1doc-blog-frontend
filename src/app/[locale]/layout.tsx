// src/app/[locale]/layout.tsx
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { Ad, Direction, Footer, InfoPanel, Navbar, ThemeWrapper } from "@/components";
import { NextIntlClientProvider } from "next-intl";
import {getMessages } from "next-intl/server";
import { LanguageProvider } from "@/context/language.context";
import { ThemeProvider } from "@/context/theme.context"; // Theme kontekstini import qilish
import { routing } from "@/i18n/routing";
import { notFound } from "next/navigation";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
  display: "swap",
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
  display: "swap",
});

export const metadata: Metadata = {
  title: "1Doc Blog",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
  params,
}: Readonly<{
  children: React.ReactNode;
  params: Promise<{ locale: string }>;
}>) {
  const { locale } = await params;
  if (!routing.locales.includes(locale as "uz" | "ru" | "en")) {
    notFound();
  }
  const messages = await getMessages();
  return (
    <html lang={locale} style={{ ...geistSans.style, ...geistMono.style }}>
      <body
        className={`sm:overflow-x-hidden dark antialiased !px-4 !py-5 dark:bg-background dark:text-white`}
      >
        <ThemeProvider>
          <LanguageProvider>
            <NextIntlClientProvider locale={locale} messages={messages}>
              <ThemeWrapper>
                <div className="flex flex-col w-full gap-3">
                    <div className="fixed top-1/2 left-1 z-50 transition-all duration-700 animate-scaleAd">
                    <Ad />
                    </div>
                  <InfoPanel />
                  <Navbar />
                  <Direction />
                  {children}
                  <footer className="flex w-full">
                    <Footer />
                  </footer>
                </div>
              </ThemeWrapper>
            </NextIntlClientProvider>
          </LanguageProvider>
        </ThemeProvider>
      </body>
    </html>
  );
}