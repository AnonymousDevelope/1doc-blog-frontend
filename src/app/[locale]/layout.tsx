import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { Loader, ThemeWrapper } from "@/components";
import { NextIntlClientProvider } from "next-intl";
import { getMessages } from "next-intl/server";
import { LanguageProvider } from "@/context/language.context";
import { ThemeProvider } from "@/context/theme.context";
import { routing } from "@/i18n/routing";
import { notFound } from "next/navigation";
import React, { Suspense } from "react";
import { Toaster } from "@/components/ui/toaster";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
  display: "swap",
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
  display: "swap",
});

export const metadata: Metadata = {
  title: "1Doc Blog",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
  params,
}: {
  children: React.ReactNode;
  params: { locale: string };
}) {
  const { locale } = await params;
  if (!routing.locales.includes(locale as "uz" | "ru" | "en")) {
    notFound();
  }
  const messages = await getMessages({ locale });
  
  return (
    <html lang={locale} className={`${geistSans.variable} ${geistMono.variable}`}>
      <body className="sm:overflow-x-hidden dark antialiased py-5 dark:bg-background dark:text-white">
        <Suspense fallback={<Loader />}>
          <ThemeProvider>
            <LanguageProvider>
              <NextIntlClientProvider locale={locale} messages={messages}>
                <ThemeWrapper>
                  {children}
                  <Toaster />
                </ThemeWrapper>
              </NextIntlClientProvider>
            </LanguageProvider>
          </ThemeProvider>
        </Suspense>
      </body>
    </html>
  );
}